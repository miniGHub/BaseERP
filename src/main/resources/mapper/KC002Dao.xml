<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 设置为IKC002Dao接口方法提供sql语句配置 -->
<mapper namespace="com.mini.dao.IKC002Dao">

    <select id="selectKC002" resultType="com.mini.model.KC002" parameterType="String">
        SELECT * FROM KC002 WHERE product_id = #{product_id}
    </select>

    <delete id="deleteKC002" parameterType="com.mini.model.KC002">
        DELETE FROM KC002 WHERE product_id = #{product_id}
    </delete>

    <insert id="insertKC002" parameterType="com.mini.model.KC002" flushCache="true">
        INSERT INTO KC002 (product_id, respority_id, in_date, amount, purchase_note_id, sales_return_note_id, sales_exchange_note_id, purchase_exchange_note_id, freeuse1, freeuse2, freeuse3) VALUES
        <foreach item="item" collection="list" separator=",">
            (#{item.product_id}, #{item.respority_id}, #{item.in_date}, #{item.amount}, #{item.purchase_note_id}, #{item.sales_return_note_id}, #{item.sales_exchange_note_id}, #{item.purchase_exchange_note_id}, #{item.freeuse1}, #{item.freeuse2}, #{item.freeuse3})
        </foreach>
    </insert>

    <update id="updateKC002" parameterType="com.mini.model.KC002" flushCache="true">
        UPDATE KC002 SET
        product_id       = #{product_id},
        repority_id      = #{repority_id},
        in_date          = #{in_date},
        amount           = #{amount},
        purchase_note_id = #{purchase_note_id},
        sales_return_note_id   = #{sales_return_note_id},
        sales_exchange_note_id = #{sales_exchange_note_id},
        purchase_exchange_note_id = #{purchase_exchange_note_id},
        freeuse1       = #{freeuse1},
        freeuse2       = #{freeuse2},
        freeuse3       = #{freeuse3}
        WHERE product_id = #{product_id}
    </update>

</mapper>